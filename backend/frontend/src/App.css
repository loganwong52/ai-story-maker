#root {
  /* max-width: 1280px; */
  width: 100%;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}

.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}

.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

/* Below is new CSS I added myself */
img {
  white-space: pre
}

/* A flexbox layout with 2 columns */
.app-container {
  display: flex;
  width: 100%;
  max-width: 100vw;
  min-height: 100vh;
  /* Ensure it doesn't overflow horizontally */
  padding: 20px;
  box-sizing: border-box;
}

.left-column {
  flex: 1;
  position: relative;
  padding: 20px;
}

.right-column {
  flex: 1;
  /* padding: 20px; */
  height: 100vh;
  width: 100vw;
  position: relative;
}

/* vertical divider line between the sections */
.left-column::after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  height: 100%;
  width: 1px;
  background-color: #ccc;
}

.input-section {
  display: grid;
  gap: 20px;
}

.input-section h5 {
  margin: 0px;
}

.original-prompt-section,
.refined-prompt-section {
  display: flex;
  flex-direction: column;
  gap: 5px;
}

/* Force textarea to expand to full width */
.original-prompt-section textarea,
.refined-prompt-section textarea {
  width: 100%;
  box-sizing: border-box;
  /* Ensures padding doesn't affect width */
}

.upload-text-file-functionality {
  display: flex;
  justify-content: center;
  /* padding-left: 20px; */
}


.result-section {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}


/* Grid */
.grid {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 5px;
}


.grid-row {
  display: flex;
  justify-content: center;
  gap: 10px;
}

.grid-cell {
  min-width: 50px;
  min-height: 50px;
  padding: 5px;
  border: 1px solid #ccc;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.2rem;

  width: auto;
  height: auto;
  white-space: nowrap;
}

.panel-header {
  margin: 0;
  align-self: flex-start;
}




/* white rectangle container */
.image-bleed {
  position: relative;
  width: 6.875in;
  height: 10.4375in;
  background-color: white;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto;

}

/* trim line */
.trim-line {
  position: absolute;
  width: 6.625in;
  height: 10.1875in;
  border: 1px solid cornflowerblue;
  pointer-events: none;
  z-index: 1;
}

/* the safe area inside the white rectangle */
.safe-area {
  width: 6.125in;
  height: 9.6875in;
  border: 1px dashed #ccc;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  position: relative;
}

.safe-area img {
  object-fit: cover;
  width: 300px;
  height: auto;
}

/* Panel */
.panel-image {
  max-width: 100%;
  max-height: 100%;
  display: block;
  object-fit: contain;
}

/* Grid cell container (enforces equal sizing) */
.cell-container {
  min-width: 0;
  min-height: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  flex: 1;
  padding: 5px;
}


/* Image wrapper (ensures consistent aspect ratio) */
.image-wrapper {
  flex: 1;
  min-height: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Image rules (uniform sizing) */
.panel-image {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
  display: block;
  margin: auto;
}

/* Add this new rule - targets the container INSIDE Panel */
.panel-image-container {
  display: flex;
  flex-direction: column;

  flex: 1;
  min-height: 0;
  justify-content: center;
  align-items: center;
}


/* Resizable */
/* Add to your stylesheet */
/* .panel-container {
  position: relative;
  width: 100%;
  height: 100%;
}

.react-resizable-layout-handle {
  background: blue;
  width: 20px;
  height: 20px;
  position: absolute;
  right: 0;
  bottom: 0;
  cursor: se-resize;
} */


/* Ensure the resizable container fills its parent */
.resizable-container {
  display: flex;
  height: 100%;
}

/* Style for the content panels */
.panel {
  overflow: auto;
  padding: 15px;
}